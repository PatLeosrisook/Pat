{"ast":null,"code":"var _jsxFileName = \"/Users/patleo/Desktop/Dropbox/Porfolio/Frontends/React/personalsite/src/Components/Links.js\",\n  _s = $RefreshSig$();\nimport '../SCSS/home.css';\nimport { useEffect } from 'react';\nimport { NavHashLink } from 'react-router-hash-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Links({\n  setTab,\n  isTabOpen\n}) {\n  _s();\n  let handleClick = () => {\n    setTab(!isTabOpen);\n  };\n  useEffect(() => {\n    // console.log(nextPath)\n    // try{\n    //     if((HomeRef.current && AboutRef.current && ContactRef.current)) {\n    //       if(nextPath == '/') {\n    //         window.scrollTo({top: 0, behavior: \"smooth\"})\n    //       } else if(nextPath == \"/About\") {\n    //         if(AboutRef.current) {\n    //           AboutRef.current.scrollIntoView({behavior: 'smooth'})\n    //         } \n    //       } else if(nextPath=='/Contact') {\n    //         if(ContactRef.current) {\n    //           ContactRef.current.scrollIntoView({behavior: 'smooth'})\n    //         } else {\n    //           console.log(ContactRef)\n    //         }\n    //       } else {\n    //         window.scrollTo({top: 0, behavior: \"smooth\"})\n    //       }\n    //     }\n\n    //   } catch(e) {\n    //     console.log(\"NOt load\")\n    //   }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Links\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavHashLink, {\n        onClick: () => handleClick(\"HomeRef\"),\n        smooth: true,\n        className: \"Home-link\",\n        to: \"/\",\n        elementId: \"Landing\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavHashLink, {\n        smooth: true,\n        onClick: () => handleClick(\"AboutRef\"),\n        className: \"About-link\",\n        to: \"/About\",\n        elementId: \"About\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavHashLink, {\n        onClick: () => handleClick(\"Work\"),\n        smooth: true,\n        to: \"/Work\",\n        elementId: \"Work\",\n        children: \"Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavHashLink, {\n        smooth: true,\n        onClick: () => handleClick(\"ContactRef\"),\n        className: \"Contact-link\",\n        to: \"/Contact\",\n        elementId: \"Contact\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Links, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Links;\nvar _c;\n$RefreshReg$(_c, \"Links\");","map":{"version":3,"names":["useEffect","NavHashLink","jsxDEV","_jsxDEV","Links","setTab","isTabOpen","_s","handleClick","className","children","onClick","smooth","to","elementId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patleo/Desktop/Dropbox/Porfolio/Frontends/React/personalsite/src/Components/Links.js"],"sourcesContent":["import '../SCSS/home.css'\nimport { useEffect } from 'react';\nimport { NavHashLink} from 'react-router-hash-link';\nexport function Links({ setTab,isTabOpen}) {\n    \n    let handleClick = () => {\n        setTab(!isTabOpen)\n    }\n    useEffect(() => {\n        // console.log(nextPath)\n        // try{\n        //     if((HomeRef.current && AboutRef.current && ContactRef.current)) {\n        //       if(nextPath == '/') {\n        //         window.scrollTo({top: 0, behavior: \"smooth\"})\n        //       } else if(nextPath == \"/About\") {\n        //         if(AboutRef.current) {\n        //           AboutRef.current.scrollIntoView({behavior: 'smooth'})\n        //         } \n        //       } else if(nextPath=='/Contact') {\n        //         if(ContactRef.current) {\n        //           ContactRef.current.scrollIntoView({behavior: 'smooth'})\n        //         } else {\n        //           console.log(ContactRef)\n        //         }\n        //       } else {\n        //         window.scrollTo({top: 0, behavior: \"smooth\"})\n        //       }\n        //     }\n      \n        //   } catch(e) {\n        //     console.log(\"NOt load\")\n        //   }\n        \n    })\n    return (\n        <ul className=\"Links\">\n            <li>\n                <NavHashLink  \n                onClick={() => handleClick(\"HomeRef\")}  \n                smooth\n                className=\"Home-link\"  \n                to={\"/\"} \n                elementId='Landing'>Home</NavHashLink>\n            </li>\n            <li>\n                <NavHashLink  \n                smooth \n                onClick={() => handleClick(\"AboutRef\")} \n                className=\"About-link\" \n                to=\"/About\"\n                elementId='About'>About</NavHashLink>\n            </li>\n            <li>\n                <NavHashLink  \n                onClick={() => handleClick(\"Work\")} \n                smooth\n                to=\"/Work\" \n                elementId='Work'>Works</NavHashLink>\n            </li>\n            <li>\n                <NavHashLink  \n                smooth \n                onClick={() => handleClick(\"ContactRef\")} \n                className=\"Contact-link\" \n                to=\"/Contact\" \n                elementId='Contact'>Contact</NavHashLink>\n            </li>\n        </ul>\n    )\n}"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,OAAO,SAASC,KAAKA,CAAC;EAAEC,MAAM;EAACC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEvC,IAAIC,WAAW,GAAGA,CAAA,KAAM;IACpBH,MAAM,CAAC,CAACC,SAAS,CAAC;EACtB,CAAC;EACDN,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EAAA,CAEH,CAAC;EACF,oBACIG,OAAA;IAAIM,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACjBP,OAAA;MAAAO,QAAA,eACIP,OAAA,CAACF,WAAW;QACZU,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,SAAS,CAAE;QACtCI,MAAM;QACNH,SAAS,EAAC,WAAW;QACrBI,EAAE,EAAE,GAAI;QACRC,SAAS,EAAC,SAAS;QAAAJ,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACLf,OAAA;MAAAO,QAAA,eACIP,OAAA,CAACF,WAAW;QACZW,MAAM;QACND,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,UAAU,CAAE;QACvCC,SAAS,EAAC,YAAY;QACtBI,EAAE,EAAC,QAAQ;QACXC,SAAS,EAAC,OAAO;QAAAJ,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACLf,OAAA;MAAAO,QAAA,eACIP,OAAA,CAACF,WAAW;QACZU,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,MAAM,CAAE;QACnCI,MAAM;QACNC,EAAE,EAAC,OAAO;QACVC,SAAS,EAAC,MAAM;QAAAJ,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACLf,OAAA;MAAAO,QAAA,eACIP,OAAA,CAACF,WAAW;QACZW,MAAM;QACND,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,YAAY,CAAE;QACzCC,SAAS,EAAC,cAAc;QACxBI,EAAE,EAAC,UAAU;QACbC,SAAS,EAAC,SAAS;QAAAJ,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb;AAACX,EAAA,CAlEeH,KAAK;AAAAe,EAAA,GAALf,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}